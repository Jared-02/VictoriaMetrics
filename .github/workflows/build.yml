name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Build version"
        required: true
        type: string

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ inputs.version }}
    strategy:
      matrix:
        arch:
          - linux-amd64
          - linux-arm
          - linux-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: VictoriaMetrics/VictoriaMetrics
          ref: ${{ inputs.version }}
          fetch-depth: 1

      - name: Setup Go
        id: go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false

      - name: Cache Go artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/bin
            ~/go/pkg/mod
          key: go-artifacts-${{ runner.os }}-crossbuild-${{ steps.go.outputs.go-version }}-${{ hashFiles('go.sum', 'Makefile', 'app/**/Makefile') }}
          restore-keys: go-artifacts-${{ runner.os }}-crossbuild-

      - name: Make vmagent
        run: make vmagent-${{ matrix.arch }}-prod

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vmagent-${{ matrix.arch }}
          path: bin/vmagent-*
          retention-days: 7

      - name: Create archive
        run: |
          BINARY_NAME="vmagent-${{ matrix.arch }}-prod"
          ARCHIVE_NAME="vmagent-${{ env.VERSION }}-${{ matrix.arch }}.tar.gz"
          tar -czvf "bin/${ARCHIVE_NAME}" -C bin "${BINARY_NAME}"
          cd bin && sha256sum "${ARCHIVE_NAME}" > "${ARCHIVE_NAME}.sha256"

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: |-
            bin/vmagent-${{ env.VERSION }}-${{ matrix.arch }}.tar.gz
            bin/vmagent-${{ env.VERSION }}-${{ matrix.arch }}.tar.gz.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
